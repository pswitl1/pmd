<?xml version="1.0" encoding="UTF-8"?>
<test-data
        xmlns="http://pmd.sourceforge.net/rule-tests"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://pmd.sourceforge.net/rule-tests http://pmd.sourceforge.net/rule-tests_1_0_0.xsd">
    <test-code>
        <description>violation: reassigned 'for' loop variable</description>
        <expected-problems>1</expected-problems>
        <expected-linenumbers>5</expected-linenumbers>
        <code><![CDATA[
public class Foo {
    void foo(int bar) {
        for (int i=0; i < 10; i++) {
            doSomethingWith(i);
            i = 5; // not OK
        }
    }
}
     ]]></code>
    </test-code>

    <test-code>
        <description>violation: incremented 'for' loop variable</description>
        <expected-problems>1</expected-problems>
        <expected-linenumbers>5</expected-linenumbers>
        <code><![CDATA[
public class Foo {
    void foo(int bar) {
        for (int i=0; i < 10; i++) {
            doSomethingWith(i);
            i++; // not OK
        }
    }
}
     ]]></code>
    </test-code>

    <test-code>
        <description>no violation: incremented other variable</description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public class Foo {
    void foo(int bar) {
        for (int i=0; i < 10; i++) {
            doSomethingWith(i);
            x++;
        }
    }
}
     ]]></code>
    </test-code>

    <test-code>
        <description>no violation: incremented field</description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public class Foo {
    void foo(int bar) {
        for (int i=0; i < 10; i++) {
            doSomethingWith(i);
            this.i++; // not OK
        }
    }
}
     ]]></code>
    </test-code>

    <test-code>
        <description>violation: add to 'for' loop variable</description>
        <expected-problems>1</expected-problems>
        <expected-linenumbers>5</expected-linenumbers>
        <code><![CDATA[
public class Foo {
    void foo(int bar) {
        for (int i=0; i < 10; i++) {
            doSomethingWith(i);
            i += 1; // not OK
        }
    }
}
     ]]></code>
    </test-code>

    <test-code>
        <description>no violation: incremented 'for' loop variable</description>
        <rule-property name="forReassign">skip</rule-property>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public class Foo {
    void foo(int bar) {
        for (int i=0; i < 10; i++) {
            doSomethingWith(i);
            i++;
        }
    }
}
     ]]></code>
    </test-code>

    <test-code>
        <description>no violation: incremented 'for' loop variable</description>
        <rule-property name="forReassign">skip</rule-property>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public class Foo {
    void foo(int bar) {
        for (int i=0; i < 10; i++) {
            doSomethingWith(i);
            i += 1;
        }
    }
}
     ]]></code>
    </test-code>

    <test-code>
        <description>violation: reassign 'for' loop variable, only skip allowed</description>
        <rule-property name="forReassign">skip</rule-property>
        <expected-problems>1</expected-problems>
        <expected-linenumbers>6</expected-linenumbers>
        <code><![CDATA[
public class Foo {
    void foo(int bar) {
        for (int i=0; i < 10; i++) {
            doSomethingWith(i);
            i += 1;
            i = 5;
        }
    }
}
     ]]></code>
    </test-code>

    <test-code>
        <description>no violation: reassign 'for' loop variable</description>
        <rule-property name="forReassign">allow</rule-property>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public class Foo {
    void foo(int bar) {
        for (int i=0; i < 10; i++) {
            doSomethingWith(i);
            i += 1;
            i = 5;
        }
    }
}
     ]]></code>
    </test-code>

    <test-code>
        <description>violation: various reassignments of 'for' loop variable</description>
        <expected-problems>9</expected-problems>
        <expected-linenumbers>5,6,7,8,9,10,11,12,13</expected-linenumbers>
        <code><![CDATA[
public class Foo {
    void foo(int bar) {
        for (int i=0; i < 10; i++) {
            doSomethingWith(i);
            i++; // not OK
            i--; // not OK
            ++i; // not OK
            --i; // not OK
            i += 1; // not OK
            i -= 1; // not OK
            i *= 1; // not OK
            i /= 1; // not OK
            i = 5; // not OK
        }
    }
}
     ]]></code>
    </test-code>

    <test-code>
        <description>violation: various reassignments of 'for' loop variable, skip allowed</description>
        <rule-property name="forReassign">skip</rule-property>
        <expected-problems>3</expected-problems>
        <expected-linenumbers>11,12,13</expected-linenumbers>
        <code><![CDATA[
public class Foo {
    void foo(int bar) {
        for (int i=0; i < 10; i++) {
            doSomethingWith(i);
            i++;
            i--;
            ++i;
            --i;
            i += 1;
            i -= 1;
            i *= 1; // not OK
            i /= 1; // not OK
            i = 5; // not OK
        }
    }
}
     ]]></code>
    </test-code>

    <test-code>
        <description>violation: reassigned 'foreach' loop variable</description>
        <expected-problems>1</expected-problems>
        <expected-linenumbers>6</expected-linenumbers>
        <code><![CDATA[
public class Foo {
    void foo(int bar) {
        int[] ints = {1, 2, 3};
        for (int i : ints) {
            doSomethingWith(i);
            i = 5; // not OK
        }
    }
}
     ]]></code>
    </test-code>

    <test-code>
        <description>violation: increment 'foreach' loop variable, but not as first statement</description>
        <rule-property name="foreachReassign">firstOnly</rule-property>
        <expected-problems>1</expected-problems>
        <expected-linenumbers>6</expected-linenumbers>
        <code><![CDATA[
public class Foo {
    void foo(int bar) {
        int[] ints = {1, 2, 3};
        for (int i : ints) {
            doSomethingWith(i);
            i += 1; // not OK
        }
    }
}
     ]]></code>
    </test-code>

    <test-code>
        <description>no violation: increment 'foreach' loop variable as first statement</description>
        <rule-property name="foreachReassign">firstOnly</rule-property>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public class Foo {
    void foo(int bar) {
        int[] ints = {1, 2, 3};
        for (int i : ints) {
            i++;
            doSomethingWith(i);
        }
    }
}
     ]]></code>
    </test-code>

    <test-code>
        <description>no violation: assign-increment 'foreach' loop variable as first statement</description>
        <rule-property name="foreachReassign">firstOnly</rule-property>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public class Foo {
    void foo(int bar) {
        int[] ints = {1, 2, 3};
        for (int i : ints) {
            i += 1;
            doSomethingWith(i);
        }
    }
}
     ]]></code>
    </test-code>

    <test-code>
        <description>violation: increment 'foreach' loop variable multiple times</description>
        <rule-property name="foreachReassign">firstOnly</rule-property>
        <expected-problems>1</expected-problems>
        <expected-linenumbers>7</expected-linenumbers>
        <code><![CDATA[
public class Foo {
    void foo(int bar) {
        int[] ints = {1, 2, 3};
        for (int i : ints) {
            i++;
            doSomethingWith(i);
            i++; // not OK
        }
    }
}
     ]]></code>
    </test-code>

    <test-code>
        <description>violation: pre-increment 'foreach' loop variable multiple times</description>
        <rule-property name="foreachReassign">firstOnly</rule-property>
        <expected-problems>1</expected-problems>
        <expected-linenumbers>7</expected-linenumbers>
        <code><![CDATA[
public class Foo {
    void foo(int bar) {
        int[] ints = {1, 2, 3};
        for (int i : ints) {
            ++i;
            doSomethingWith(i);
            ++i; // not OK
        }
    }
}
     ]]></code>
    </test-code>

    <test-code>
        <description>violation: assign-increment 'foreach' loop variable multiple times</description>
        <rule-property name="foreachReassign">firstOnly</rule-property>
        <expected-problems>1</expected-problems>
        <expected-linenumbers>7</expected-linenumbers>
        <code><![CDATA[
public class Foo {
    void foo(int bar) {
        int[] ints = {1, 2, 3};
        for (int i : ints) {
            i += 1;
            doSomethingWith(i);
            i += 1; // not OK
        }
    }
}
     ]]></code>
    </test-code>

    <test-code>
        <description>no violation: increment 'foreach' loop variable multiple times</description>
        <rule-property name="foreachReassign">allow</rule-property>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public class Foo {
    void foo(int bar) {
        int[] ints = {1, 2, 3};
        for (int i : ints) {
            i += 1;
            doSomethingWith(i);
            i += 1; // not OK
        }
    }
}
     ]]></code>
    </test-code>
</test-data>
