<project name="pmd" default="alljavacc" basedir="../../">

    <property name="javacc-home.path" value="target/lib" />

    <target name="alljavacc"
            description="Generates all JavaCC aspects within PMD"
            depends="checkUpToDate,init,jspjjtree,cleanup" />

    <target name="checkUpToDate">
        <uptodate property="javaccBuildNotRequired" targetfile="${target}/last-generated-timestamp">
            <srcfiles dir="etc/grammar" includes="*.jj*"/>
        </uptodate>
        <echo message="up to date check: javaccBuildNotRequired=${javaccBuildNotRequired}"/>
    </target>

    <target name="init" unless="javaccBuildNotRequired">
        <mkdir dir="${javacc-home.path}" />
        <copy file="${javacc.jar}" tofile="${javacc-home.path}/javacc.jar" />

        <mkdir dir="${target}"/>
        <touch file="${target}/last-generated-timestamp"/>
    </target>

    <target name="cleanup">
        <delete dir="${javacc-home.path}" />
    </target>

    <target name="jspjjtree" description="Generates the VF parser and AST source files" unless="javaccBuildNotRequired">
        <delete dir="${target}/net/sourceforge/pmd/lang/vf/ast/" />
        <mkdir dir="${target}/net/sourceforge/pmd/lang/vf/ast/" />
        <jjtree target="etc/grammar/VfParser.jjt"
                outputdirectory="${target}/net/sourceforge/pmd/lang/vf/ast/"
                javacchome="${javacc-home.path}" />
        <!-- Ensure generated using CharStream interface debugparser="true"
        		debugtokenmanager="true"-->
        <javacc static="false"        	
                usercharstream="true"
                unicodeinput="true"
                javaunicodeescape="false"
                target="${target}/net/sourceforge/pmd/lang/vf/ast/VfParser.jj"
                outputdirectory="${target}/net/sourceforge/pmd/lang/vf/ast"
                javacchome="${javacc-home.path}" />
        <delete file="${target}/net/sourceforge/pmd/lang/vf/ast/Node.java" />
        <delete file="${target}/net/sourceforge/pmd/lang/vf/ast/SimpleNode.java" />
        <delete file="${target}/net/sourceforge/pmd/lang/vf/ast/CharStream.java" />
        <delete file="${target}/net/sourceforge/pmd/lang/vf/ast/TokenMgrError.java" />
        <replace file="${target}/net/sourceforge/pmd/lang/vf/ast/VfParserTokenManager.java"
                 token="class VfParserTokenManager"
                 value="class VfParserTokenManager extends net.sourceforge.pmd.lang.ast.AbstractTokenManager" />
        <replace file="${target}/net/sourceforge/pmd/lang/vf/ast/VfParser.java"
                 token="throw new Error"
                 value="throw new RuntimeException" />
        <replace file="${target}/net/sourceforge/pmd/lang/vf/ast/ParseException.java"
                 token="extends Exception"
                 value="extends net.sourceforge.pmd.lang.ast.ParseException" />
        <replace file="${target}/net/sourceforge/pmd/lang/vf/ast/VfParserVisitor.java"
                 token="SimpleNode"
                 value="VfNode" />
        <replace file="${target}/net/sourceforge/pmd/lang/vf/ast/JJTVfParserState.java">
            <replacetoken>public class</replacetoken>
            <replacevalue><![CDATA[import net.sourceforge.pmd.lang.ast.Node;

public class]]></replacevalue>
        </replace>
    	<replace file="${target}/net/sourceforge/pmd/lang/vf/ast/Token.java">
    	    <replacetoken>public class Token implements java.io.Serializable</replacetoken>
    	    <replacevalue><![CDATA[import net.sourceforge.pmd.lang.ast.GenericToken;
import net.sourceforge.pmd.lang.ast.RegionByLine;
import net.sourceforge.pmd.lang.ast.RegionByLineImpl;

public class Token implements GenericToken, java.io.Serializable]]></replacevalue>
		</replace>

        <replace file="${target}/net/sourceforge/pmd/lang/vf/ast/Token.java">
            <replacetoken>specialToken;</replacetoken>
            <replacevalue><![CDATA[specialToken;

  @Override
  public GenericToken getNextGenericToken() {
    return next;
  }

  @Override
  public GenericToken getPreviousSpecialGenericToken() {
    return specialToken;
  }

  @Override
  public RegionByLine getRegionByLine() {
    return new RegionByLineImpl(beginLine, endLine, beginColumn, endColumn);
  }

  @Override
  public String getImage() {
    return image;
  }]]></replacevalue>
        </replace>

        <delete>
            <fileset dir="${target}/net/sourceforge/pmd/lang/vf/ast">
                <include name="AST*.java" />
            </fileset>
        </delete>
    </target>

</project>
